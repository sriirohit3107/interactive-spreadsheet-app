{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUNYLoaner\\\\Desktop\\\\interactive-spreadsheet-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls, Box } from '@react-three/drei';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [cells, setCells] = useState([]);\n  const [editing, setEditing] = useState({\n    row: null,\n    col: null,\n    value: ''\n  });\n  const [gridSize, setGridSize] = useState({\n    rows: 10,\n    cols: 10\n  });\n  const [history, setHistory] = useState([]);\n  const [currentHistoryIndex, setCurrentHistoryIndex] = useState(-1);\n\n  // Fetch all cells on page load\n  useEffect(() => {\n    const fetchCells = async () => {\n      const response = await fetch('http://localhost:5000/cells');\n      if (response.ok) {\n        const data = await response.json();\n        setCells(data);\n      } else {\n        console.error('Failed to fetch cells');\n      }\n    };\n    fetchCells();\n  }, []);\n  const handleCellChange = (e, row, col) => {\n    setEditing({\n      row,\n      col,\n      value: e.target.value\n    });\n  };\n  const handleCellSave = async (row, col) => {\n    const {\n      value\n    } = editing;\n    if (!value) return;\n    const response = await fetch('http://localhost:5000/cells', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        row,\n        col,\n        value\n      })\n    });\n    if (response.ok) {\n      const updatedCell = await response.json();\n      setCells(prevCells => {\n        const updatedCells = prevCells.map(cell => {\n          if (cell.row === updatedCell.row && cell.col === updatedCell.col) {\n            return updatedCell;\n          }\n          return cell;\n        });\n        if (!prevCells.find(cell => cell.row === updatedCell.row && cell.col === updatedCell.col)) {\n          updatedCells.push(updatedCell);\n        }\n        return updatedCells;\n      });\n      addToHistory(updatedCell);\n      setEditing({\n        row: null,\n        col: null,\n        value: ''\n      });\n    } else {\n      console.error('Failed to save cell');\n    }\n  };\n  const addToHistory = updatedCell => {\n    const newHistory = [...history.slice(0, currentHistoryIndex + 1), [...cells]];\n    setHistory(newHistory);\n    setCurrentHistoryIndex(newHistory.length - 1);\n  };\n  const handleUndo = async () => {\n    if (currentHistoryIndex > 0) {\n      const previousCells = history[currentHistoryIndex - 1];\n      setCells(previousCells);\n      setCurrentHistoryIndex(currentHistoryIndex - 1);\n      previousCells.forEach(async cell => {\n        if (cell.value === \"\") {\n          await fetch('http://localhost:5000/cells', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              row: cell.row,\n              col: cell.col,\n              value: \"\"\n            })\n          });\n        }\n      });\n    }\n  };\n  const handleRedo = async () => {\n    if (currentHistoryIndex < history.length - 1) {\n      const nextCells = history[currentHistoryIndex + 1];\n      setCells(nextCells);\n      setCurrentHistoryIndex(currentHistoryIndex + 1);\n      nextCells.forEach(async cell => {\n        if (cell.value === \"\") {\n          await fetch('http://localhost:5000/cells', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              row: cell.row,\n              col: cell.col,\n              value: \"\"\n            })\n          });\n        }\n      });\n    }\n  };\n  const renderGrid = () => {\n    const grid = [];\n    for (let row = 0; row < gridSize.rows; row++) {\n      for (let col = 0; col < gridSize.cols; col++) {\n        const cell = cells.find(cell => cell.row === row && cell.col === col);\n        grid.push(/*#__PURE__*/_jsxDEV(Box, {\n          position: [col * 2, 0, row * 2] // Spacing for 3D effect\n          ,\n          args: [1, 1, 1] // Box dimensions\n          ,\n          onClick: () => setEditing({\n            row,\n            col,\n            value: cell ? cell.value : ''\n          }),\n          onPointerOver: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n            color: cell ? cell.value ? '#64b5f6' : '#ffeb3b' : '#e0e0e0'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), editing.row === row && editing.col === col ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-cell\",\n            style: {\n              position: 'absolute',\n              top: `${row * 20}px`,\n              left: `${col * 20}px`\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editing.value,\n              onChange: e => handleCellChange(e, row, col),\n              onBlur: () => handleCellSave(row, col),\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this) : null]\n        }, `${row}-${col}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return grid;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spreadsheet-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Interactive 3D Spreadsheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUndo,\n      disabled: currentHistoryIndex === 0,\n      children: \"Undo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRedo,\n      disabled: currentHistoryIndex === history.length - 1,\n      children: \"Redo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n      style: {\n        height: '500px',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n        position: [10, 10, 10],\n        intensity: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), renderGrid()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"XnwKyJUgEH7qG5PXYM1fFKuuj/4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Canvas","OrbitControls","Box","jsxDEV","_jsxDEV","App","_s","cells","setCells","editing","setEditing","row","col","value","gridSize","setGridSize","rows","cols","history","setHistory","currentHistoryIndex","setCurrentHistoryIndex","fetchCells","response","fetch","ok","data","json","console","error","handleCellChange","e","target","handleCellSave","method","headers","body","JSON","stringify","updatedCell","prevCells","updatedCells","map","cell","find","push","addToHistory","newHistory","slice","length","handleUndo","previousCells","forEach","handleRedo","nextCells","renderGrid","grid","position","args","onClick","onPointerOver","stopPropagation","children","color","fileName","_jsxFileName","lineNumber","columnNumber","className","style","top","left","type","onChange","onBlur","autoFocus","disabled","height","width","intensity","_c","$RefreshReg$"],"sources":["C:/Users/SUNYLoaner/Desktop/interactive-spreadsheet-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport { OrbitControls, Box } from '@react-three/drei';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [cells, setCells] = useState([]);\r\n  const [editing, setEditing] = useState({ row: null, col: null, value: '' });\r\n  const [gridSize, setGridSize] = useState({ rows: 10, cols: 10 });\r\n  const [history, setHistory] = useState([]);\r\n  const [currentHistoryIndex, setCurrentHistoryIndex] = useState(-1);\r\n\r\n  // Fetch all cells on page load\r\n  useEffect(() => {\r\n    const fetchCells = async () => {\r\n      const response = await fetch('http://localhost:5000/cells');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setCells(data);\r\n      } else {\r\n        console.error('Failed to fetch cells');\r\n      }\r\n    };\r\n    fetchCells();\r\n  }, []);\r\n\r\n  const handleCellChange = (e, row, col) => {\r\n    setEditing({ row, col, value: e.target.value });\r\n  };\r\n\r\n  const handleCellSave = async (row, col) => {\r\n    const { value } = editing;\r\n    if (!value) return;\r\n\r\n    const response = await fetch('http://localhost:5000/cells', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ row, col, value }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const updatedCell = await response.json();\r\n      setCells((prevCells) => {\r\n        const updatedCells = prevCells.map((cell) => {\r\n          if (cell.row === updatedCell.row && cell.col === updatedCell.col) {\r\n            return updatedCell;\r\n          }\r\n          return cell;\r\n        });\r\n\r\n        if (!prevCells.find((cell) => cell.row === updatedCell.row && cell.col === updatedCell.col)) {\r\n          updatedCells.push(updatedCell);\r\n        }\r\n\r\n        return updatedCells;\r\n      });\r\n\r\n      addToHistory(updatedCell);\r\n      setEditing({ row: null, col: null, value: '' });\r\n    } else {\r\n      console.error('Failed to save cell');\r\n    }\r\n  };\r\n\r\n  const addToHistory = (updatedCell) => {\r\n    const newHistory = [...history.slice(0, currentHistoryIndex + 1), [...cells]];\r\n    setHistory(newHistory);\r\n    setCurrentHistoryIndex(newHistory.length - 1);\r\n  };\r\n\r\n  const handleUndo = async () => {\r\n    if (currentHistoryIndex > 0) {\r\n      const previousCells = history[currentHistoryIndex - 1];\r\n      setCells(previousCells);\r\n      setCurrentHistoryIndex(currentHistoryIndex - 1);\r\n\r\n      previousCells.forEach(async (cell) => {\r\n        if (cell.value === \"\") {\r\n          await fetch('http://localhost:5000/cells', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ row: cell.row, col: cell.col, value: \"\" }),\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleRedo = async () => {\r\n    if (currentHistoryIndex < history.length - 1) {\r\n      const nextCells = history[currentHistoryIndex + 1];\r\n      setCells(nextCells);\r\n      setCurrentHistoryIndex(currentHistoryIndex + 1);\r\n\r\n      nextCells.forEach(async (cell) => {\r\n        if (cell.value === \"\") {\r\n          await fetch('http://localhost:5000/cells', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ row: cell.row, col: cell.col, value: \"\" }),\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const renderGrid = () => {\r\n    const grid = [];\r\n    for (let row = 0; row < gridSize.rows; row++) {\r\n      for (let col = 0; col < gridSize.cols; col++) {\r\n        const cell = cells.find((cell) => cell.row === row && cell.col === col);\r\n        grid.push(\r\n          <Box\r\n            key={`${row}-${col}`}\r\n            position={[col * 2, 0, row * 2]} // Spacing for 3D effect\r\n            args={[1, 1, 1]} // Box dimensions\r\n            onClick={() => setEditing({ row, col, value: cell ? cell.value : '' })}\r\n            onPointerOver={(e) => e.stopPropagation()}\r\n          >\r\n            <meshStandardMaterial color={cell ? (cell.value ? '#64b5f6' : '#ffeb3b') : '#e0e0e0'} />\r\n            {editing.row === row && editing.col === col ? (\r\n              <div\r\n                className=\"input-cell\"\r\n                style={{ position: 'absolute', top: `${row * 20}px`, left: `${col * 20}px` }}\r\n              >\r\n                <input\r\n                  type=\"text\"\r\n                  value={editing.value}\r\n                  onChange={(e) => handleCellChange(e, row, col)}\r\n                  onBlur={() => handleCellSave(row, col)}\r\n                  autoFocus\r\n                />\r\n              </div>\r\n            ) : null}\r\n          </Box>\r\n        );\r\n      }\r\n    }\r\n    return grid;\r\n  };\r\n\r\n  return (\r\n    <div className=\"spreadsheet-container\">\r\n      <h1>Interactive 3D Spreadsheet</h1>\r\n\r\n      <button onClick={handleUndo} disabled={currentHistoryIndex === 0}>Undo</button>\r\n      <button onClick={handleRedo} disabled={currentHistoryIndex === history.length - 1}>Redo</button>\r\n\r\n      <Canvas style={{ height: '500px', width: '100%' }}>\r\n        <ambientLight intensity={0.3} />\r\n        <directionalLight position={[10, 10, 10]} intensity={1} />\r\n        <OrbitControls />\r\n        {renderGrid()}\r\n      </Canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}