{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUNYLoaner\\\\Desktop\\\\interactive-spreadsheet-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { gsap } from 'gsap';\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls, Plane } from '@react-three/drei';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [cells, setCells] = useState([]);\n  const [editing, setEditing] = useState({\n    row: null,\n    col: null,\n    value: ''\n  });\n  const [history, setHistory] = useState([]);\n  const [currentHistoryIndex, setCurrentHistoryIndex] = useState(-1);\n  const cellRefs = useRef([]);\n\n  // Adjust grid size to 50 rows and 26 columns (A to Z)\n  const gridSize = {\n    rows: 50,\n    cols: 26\n  }; // 50 rows, 26 columns (A to Z)\n\n  useEffect(() => {\n    const fetchCells = async () => {\n      const response = await fetch('http://localhost:5000/cells');\n      if (response.ok) {\n        const data = await response.json();\n        setCells(data);\n      } else {\n        console.error('Failed to fetch cells');\n      }\n    };\n    fetchCells();\n  }, []);\n  const handleCellChange = (e, row, col) => {\n    setEditing({\n      row,\n      col,\n      value: e.target.value\n    });\n  };\n  const handleCellSave = async (row, col) => {\n    const {\n      value\n    } = editing;\n    if (!value) return;\n    const response = await fetch('http://localhost:5000/cells', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        row,\n        col,\n        value\n      })\n    });\n    if (response.ok) {\n      const updatedCell = await response.json();\n      setCells(prevCells => {\n        const updatedCells = prevCells.map(cell => {\n          if (cell.row === updatedCell.row && cell.col === updatedCell.col) {\n            return updatedCell;\n          }\n          return cell;\n        });\n        if (!prevCells.find(cell => cell.row === updatedCell.row && cell.col === updatedCell.col)) {\n          updatedCells.push(updatedCell);\n        }\n        return updatedCells;\n      });\n      addToHistory(updatedCell);\n      setEditing({\n        row: null,\n        col: null,\n        value: ''\n      });\n    } else {\n      console.error('Failed to save cell');\n    }\n  };\n  const addToHistory = updatedCell => {\n    const newHistory = [...history.slice(0, currentHistoryIndex + 1), [...cells]];\n    setHistory(newHistory);\n    setCurrentHistoryIndex(newHistory.length - 1);\n  };\n  const handleUndo = async () => {\n    if (currentHistoryIndex > 0) {\n      const previousCells = history[currentHistoryIndex - 1];\n      setCells(previousCells);\n      setCurrentHistoryIndex(currentHistoryIndex - 1);\n    }\n  };\n  const handleRedo = async () => {\n    if (currentHistoryIndex < history.length - 1) {\n      const nextCells = history[currentHistoryIndex + 1];\n      setCells(nextCells);\n      setCurrentHistoryIndex(currentHistoryIndex + 1);\n    }\n  };\n  const renderGrid = () => {\n    const grid = [];\n    for (let row = 0; row < gridSize.rows; row++) {\n      for (let col = 0; col < gridSize.cols; col++) {\n        const cell = cells.find(cell => cell.row === row && cell.col === col);\n        grid.push(/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `cell`,\n          ref: el => cellRefs.current[`${row}-${col}`] = el,\n          onClick: () => setEditing({\n            row,\n            col,\n            value: cell ? cell.value : ''\n          }),\n          style: {\n            gridRowStart: row + 2,\n            // 1 row for the header\n            gridColumnStart: col + 2,\n            // 1 column for the header\n            border: '1px solid #ccc',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: (row + col) % 2 === 0 ? '#f4f4f4' : '#fff',\n            cursor: 'pointer'\n          },\n          onMouseEnter: () => handleCellHover(row, col),\n          onMouseLeave: () => handleCellHoverLeave(row, col),\n          children: editing.row === row && editing.col === col ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editing.value,\n            onChange: e => handleCellChange(e, row, col),\n            onBlur: () => handleCellSave(row, col),\n            autoFocus: true,\n            className: \"cell-input\",\n            style: {\n              width: '100%',\n              height: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: cell ? cell.value : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)\n        }, `${row}-${col}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return grid;\n  };\n  const renderColumnHeaders = () => {\n    const headers = [];\n    for (let col = 0; col < gridSize.cols; col++) {\n      const columnLabel = String.fromCharCode(65 + col); // Convert 0 -> A, 1 -> B, ..., 25 -> Z\n      headers.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          border: '1px solid #ccc',\n          backgroundColor: '#f4f4f4',\n          fontWeight: 'bold',\n          padding: '5px',\n          cursor: 'pointer'\n        },\n        children: columnLabel\n      }, `header-${col}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this));\n    }\n    return headers;\n  };\n  const renderRowHeaders = () => {\n    const headers = [];\n    for (let row = 0; row < gridSize.rows; row++) {\n      headers.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          border: '1px solid #ccc',\n          backgroundColor: '#f4f4f4',\n          fontWeight: 'bold',\n          padding: '5px',\n          cursor: 'pointer'\n        },\n        children: row + 1\n      }, `row-header-${row}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this));\n    }\n    return headers;\n  };\n  const handleCellHover = (row, col) => {\n    const cell = cellRefs.current[`${row}-${col}`];\n    gsap.to(cell, {\n      scale: 1.05,\n      boxShadow: \"0px 4px 12px rgba(0, 123, 255, 0.6)\",\n      duration: 0.3\n    });\n  };\n  const handleCellHoverLeave = (row, col) => {\n    const cell = cellRefs.current[`${row}-${col}`];\n    gsap.to(cell, {\n      scale: 1,\n      boxShadow: \"0px 0px 6px rgba(0, 0, 0, 0.1)\",\n      duration: 0.3\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spreadsheet-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Interactive 2D Spreadsheet with GSAP Animations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUndo,\n      disabled: currentHistoryIndex === 0,\n      children: \"Undo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRedo,\n      disabled: currentHistoryIndex === history.length - 1,\n      children: \"Redo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spreadsheet\",\n      style: {\n        display: 'grid',\n        gridTemplateColumns: `repeat(${gridSize.cols + 1}, 1fr)`,\n        // extra column for row headers\n        gridTemplateRows: `repeat(${gridSize.rows + 1}, 1fr)`,\n        // extra row for column headers\n        gap: '2px',\n        width: '80%',\n        margin: '20px auto'\n      },\n      children: [renderColumnHeaders(), renderRowHeaders(), renderGrid()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n      children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n        position: [5, 5, 5],\n        intensity: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Plane, {\n        args: [5, 5],\n        position: [0, 0, -1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"P+p1/PYfQPjwf375UsK8YTmqlyk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","gsap","Canvas","OrbitControls","Plane","jsxDEV","_jsxDEV","App","_s","cells","setCells","editing","setEditing","row","col","value","history","setHistory","currentHistoryIndex","setCurrentHistoryIndex","cellRefs","gridSize","rows","cols","fetchCells","response","fetch","ok","data","json","console","error","handleCellChange","e","target","handleCellSave","method","headers","body","JSON","stringify","updatedCell","prevCells","updatedCells","map","cell","find","push","addToHistory","newHistory","slice","length","handleUndo","previousCells","handleRedo","nextCells","renderGrid","grid","className","ref","el","current","onClick","style","gridRowStart","gridColumnStart","border","display","alignItems","justifyContent","backgroundColor","cursor","onMouseEnter","handleCellHover","onMouseLeave","handleCellHoverLeave","children","type","onChange","onBlur","autoFocus","width","height","fileName","_jsxFileName","lineNumber","columnNumber","renderColumnHeaders","columnLabel","String","fromCharCode","fontWeight","padding","renderRowHeaders","to","scale","boxShadow","duration","disabled","gridTemplateColumns","gridTemplateRows","gap","margin","intensity","position","args","_c","$RefreshReg$"],"sources":["C:/Users/SUNYLoaner/Desktop/interactive-spreadsheet-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { gsap } from 'gsap';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport { OrbitControls, Plane } from '@react-three/drei';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [cells, setCells] = useState([]);\r\n  const [editing, setEditing] = useState({ row: null, col: null, value: '' });\r\n  const [history, setHistory] = useState([]);\r\n  const [currentHistoryIndex, setCurrentHistoryIndex] = useState(-1);\r\n  const cellRefs = useRef([]);\r\n\r\n  // Adjust grid size to 50 rows and 26 columns (A to Z)\r\n  const gridSize = { rows: 50, cols: 26 }; // 50 rows, 26 columns (A to Z)\r\n\r\n  useEffect(() => {\r\n    const fetchCells = async () => {\r\n      const response = await fetch('http://localhost:5000/cells');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setCells(data);\r\n      } else {\r\n        console.error('Failed to fetch cells');\r\n      }\r\n    };\r\n    fetchCells();\r\n  }, []);\r\n\r\n  const handleCellChange = (e, row, col) => {\r\n    setEditing({ row, col, value: e.target.value });\r\n  };\r\n\r\n  const handleCellSave = async (row, col) => {\r\n    const { value } = editing;\r\n    if (!value) return;\r\n\r\n    const response = await fetch('http://localhost:5000/cells', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ row, col, value }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const updatedCell = await response.json();\r\n      setCells((prevCells) => {\r\n        const updatedCells = prevCells.map((cell) => {\r\n          if (cell.row === updatedCell.row && cell.col === updatedCell.col) {\r\n            return updatedCell;\r\n          }\r\n          return cell;\r\n        });\r\n\r\n        if (!prevCells.find((cell) => cell.row === updatedCell.row && cell.col === updatedCell.col)) {\r\n          updatedCells.push(updatedCell);\r\n        }\r\n\r\n        return updatedCells;\r\n      });\r\n\r\n      addToHistory(updatedCell);\r\n      setEditing({ row: null, col: null, value: '' });\r\n    } else {\r\n      console.error('Failed to save cell');\r\n    }\r\n  };\r\n\r\n  const addToHistory = (updatedCell) => {\r\n    const newHistory = [...history.slice(0, currentHistoryIndex + 1), [...cells]];\r\n    setHistory(newHistory);\r\n    setCurrentHistoryIndex(newHistory.length - 1);\r\n  };\r\n\r\n  const handleUndo = async () => {\r\n    if (currentHistoryIndex > 0) {\r\n      const previousCells = history[currentHistoryIndex - 1];\r\n      setCells(previousCells);\r\n      setCurrentHistoryIndex(currentHistoryIndex - 1);\r\n    }\r\n  };\r\n\r\n  const handleRedo = async () => {\r\n    if (currentHistoryIndex < history.length - 1) {\r\n      const nextCells = history[currentHistoryIndex + 1];\r\n      setCells(nextCells);\r\n      setCurrentHistoryIndex(currentHistoryIndex + 1);\r\n    }\r\n  };\r\n\r\n  const renderGrid = () => {\r\n    const grid = [];\r\n    for (let row = 0; row < gridSize.rows; row++) {\r\n      for (let col = 0; col < gridSize.cols; col++) {\r\n        const cell = cells.find((cell) => cell.row === row && cell.col === col);\r\n        grid.push(\r\n          <div\r\n            key={`${row}-${col}`}\r\n            className={`cell`}\r\n            ref={(el) => (cellRefs.current[`${row}-${col}`] = el)}\r\n            onClick={() => setEditing({ row, col, value: cell ? cell.value : '' })}\r\n            style={{\r\n              gridRowStart: row + 2, // 1 row for the header\r\n              gridColumnStart: col + 2, // 1 column for the header\r\n              border: '1px solid #ccc',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              backgroundColor: (row + col) % 2 === 0 ? '#f4f4f4' : '#fff',\r\n              cursor: 'pointer',\r\n            }}\r\n            onMouseEnter={() => handleCellHover(row, col)}\r\n            onMouseLeave={() => handleCellHoverLeave(row, col)}\r\n          >\r\n            {editing.row === row && editing.col === col ? (\r\n              <input\r\n                type=\"text\"\r\n                value={editing.value}\r\n                onChange={(e) => handleCellChange(e, row, col)}\r\n                onBlur={() => handleCellSave(row, col)}\r\n                autoFocus\r\n                className=\"cell-input\"\r\n                style={{ width: '100%', height: '100%' }}\r\n              />\r\n            ) : (\r\n              <span>{cell ? cell.value : ''}</span>\r\n            )}\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return grid;\r\n  };\r\n\r\n  const renderColumnHeaders = () => {\r\n    const headers = [];\r\n    for (let col = 0; col < gridSize.cols; col++) {\r\n      const columnLabel = String.fromCharCode(65 + col); // Convert 0 -> A, 1 -> B, ..., 25 -> Z\r\n      headers.push(\r\n        <div\r\n          key={`header-${col}`}\r\n          style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            border: '1px solid #ccc',\r\n            backgroundColor: '#f4f4f4',\r\n            fontWeight: 'bold',\r\n            padding: '5px',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          {columnLabel}\r\n        </div>\r\n      );\r\n    }\r\n    return headers;\r\n  };\r\n\r\n  const renderRowHeaders = () => {\r\n    const headers = [];\r\n    for (let row = 0; row < gridSize.rows; row++) {\r\n      headers.push(\r\n        <div\r\n          key={`row-header-${row}`}\r\n          style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            border: '1px solid #ccc',\r\n            backgroundColor: '#f4f4f4',\r\n            fontWeight: 'bold',\r\n            padding: '5px',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          {row + 1}\r\n        </div>\r\n      );\r\n    }\r\n    return headers;\r\n  };\r\n\r\n  const handleCellHover = (row, col) => {\r\n    const cell = cellRefs.current[`${row}-${col}`];\r\n    gsap.to(cell, {\r\n      scale: 1.05,\r\n      boxShadow: \"0px 4px 12px rgba(0, 123, 255, 0.6)\",\r\n      duration: 0.3,\r\n    });\r\n  };\r\n\r\n  const handleCellHoverLeave = (row, col) => {\r\n    const cell = cellRefs.current[`${row}-${col}`];\r\n    gsap.to(cell, {\r\n      scale: 1,\r\n      boxShadow: \"0px 0px 6px rgba(0, 0, 0, 0.1)\",\r\n      duration: 0.3,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"spreadsheet-container\">\r\n      <h1>Interactive 2D Spreadsheet with GSAP Animations</h1>\r\n\r\n      {/* Buttons for Undo and Redo */}\r\n      <button onClick={handleUndo} disabled={currentHistoryIndex === 0}>Undo</button>\r\n      <button onClick={handleRedo} disabled={currentHistoryIndex === history.length - 1}>Redo</button>\r\n\r\n      {/* Grid */}\r\n      <div\r\n        className=\"spreadsheet\"\r\n        style={{\r\n          display: 'grid',\r\n          gridTemplateColumns: `repeat(${gridSize.cols + 1}, 1fr)`, // extra column for row headers\r\n          gridTemplateRows: `repeat(${gridSize.rows + 1}, 1fr)`, // extra row for column headers\r\n          gap: '2px',\r\n          width: '80%',\r\n          margin: '20px auto',\r\n        }}\r\n      >\r\n        {/* Column headers */}\r\n        {renderColumnHeaders()}\r\n\r\n        {/* Row headers */}\r\n        {renderRowHeaders()}\r\n\r\n        {/* Grid content */}\r\n        {renderGrid()}\r\n      </div>\r\n\r\n      {/* Optional: Canvas for Dynamic Effects */}\r\n      <Canvas>\r\n        <ambientLight intensity={0.5} />\r\n        <directionalLight position={[5, 5, 5]} intensity={1} />\r\n        <OrbitControls />\r\n        <Plane args={[5, 5]} position={[0, 0, -1]} />\r\n      </Canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}