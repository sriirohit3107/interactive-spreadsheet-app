{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUNYLoaner\\\\Desktop\\\\interactive-spreadsheet-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [cells, setCells] = useState([]);\n  const [editingCell, setEditingCell] = useState(null);\n  useEffect(() => {\n    fetchCells();\n  }, []);\n  const fetchCells = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/cells');\n      setCells(response.data);\n    } catch (error) {\n      console.error('Error fetching cells:', error);\n    }\n  };\n  const handleChange = async (id, value) => {\n    try {\n      await axios.put(`http://localhost:5000/cells/${id}`, {\n        value\n      });\n      fetchCells(); // Refresh cells after update\n    } catch (error) {\n      console.error('Error updating cell:', error);\n    }\n  };\n  const handleBlur = (id, value) => {\n    setEditingCell(null);\n    handleChange(id, value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: cells.map(cell => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editingCell === cell._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              defaultValue: cell.value,\n              onBlur: e => handleBlur(cell._id, e.target.value),\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => setEditingCell(cell._id),\n              children: cell.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, `${cell.row}-${cell.col}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"I8kyx7h3OXcovs4TYzZhSaugQQ4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","cells","setCells","editingCell","setEditingCell","fetchCells","response","get","data","error","console","handleChange","id","value","put","handleBlur","className","children","map","cell","_id","type","defaultValue","onBlur","e","target","autoFocus","fileName","_jsxFileName","lineNumber","columnNumber","onClick","row","col","_c","$RefreshReg$"],"sources":["C:/Users/SUNYLoaner/Desktop/interactive-spreadsheet-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [cells, setCells] = useState([]);\r\n  const [editingCell, setEditingCell] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchCells();\r\n  }, []);\r\n\r\n  const fetchCells = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/cells');\r\n      setCells(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching cells:', error);\r\n    }\r\n  };\r\n\r\n  const handleChange = async (id, value) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/cells/${id}`, { value });\r\n      fetchCells(); // Refresh cells after update\r\n    } catch (error) {\r\n      console.error('Error updating cell:', error);\r\n    }\r\n  };\r\n\r\n  const handleBlur = (id, value) => {\r\n    setEditingCell(null);\r\n    handleChange(id, value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <table>\r\n        <tbody>\r\n          {cells.map((cell) => (\r\n            <tr key={`${cell.row}-${cell.col}`}>\r\n              <td>\r\n                {editingCell === cell._id ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={cell.value}\r\n                    onBlur={(e) => handleBlur(cell._id, e.target.value)}\r\n                    autoFocus\r\n                  />\r\n                ) : (\r\n                  <span onClick={() => setEditingCell(cell._id)}>{cell.value}</span>\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}