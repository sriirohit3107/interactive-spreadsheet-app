{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUNYLoaner\\\\Desktop\\\\interactive-spreadsheet-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { gsap } from 'gsap';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [cells, setCells] = useState([]);\n  const [editing, setEditing] = useState({\n    row: null,\n    col: null,\n    value: ''\n  });\n  const [gridSize, setGridSize] = useState({\n    rows: 10,\n    cols: 10\n  });\n  const [history, setHistory] = useState([]);\n  const [currentHistoryIndex, setCurrentHistoryIndex] = useState(-1);\n  const [currentSheet, setCurrentSheet] = useState(0); // Track the current sheet (0, 1, 2)\n  const cellRefs = useRef([]);\n\n  // Fetch cells for the current sheet\n  useEffect(() => {\n    const fetchCells = async () => {\n      const response = await fetch(`http://localhost:5000/cells?sheet=${currentSheet}`);\n      if (response.ok) {\n        const data = await response.json();\n        setCells(data);\n      } else {\n        console.error('Failed to fetch cells');\n      }\n    };\n    fetchCells();\n  }, [currentSheet]);\n  const handleCellChange = (e, row, col) => {\n    setEditing({\n      row,\n      col,\n      value: e.target.value\n    });\n  };\n  const handleCellSave = async (row, col) => {\n    const {\n      value\n    } = editing;\n    if (!value) return;\n    const response = await fetch('http://localhost:5000/cells', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        row,\n        col,\n        value,\n        sheet: currentSheet\n      })\n    });\n    if (response.ok) {\n      const updatedCell = await response.json();\n      setCells(prevCells => {\n        const updatedCells = prevCells.map(cell => {\n          if (cell.row === updatedCell.row && cell.col === updatedCell.col) {\n            return updatedCell;\n          }\n          return cell;\n        });\n        if (!prevCells.find(cell => cell.row === updatedCell.row && cell.col === updatedCell.col)) {\n          updatedCells.push(updatedCell);\n        }\n        return updatedCells;\n      });\n      addToHistory(updatedCell);\n      setEditing({\n        row: null,\n        col: null,\n        value: ''\n      });\n    } else {\n      console.error('Failed to save cell');\n    }\n  };\n  const addToHistory = updatedCell => {\n    const newHistory = [...history.slice(0, currentHistoryIndex + 1), [...cells]];\n    setHistory(newHistory);\n    setCurrentHistoryIndex(newHistory.length - 1);\n  };\n  const handleUndo = async () => {\n    if (currentHistoryIndex > 0) {\n      const previousCells = history[currentHistoryIndex - 1];\n      setCells(previousCells);\n      setCurrentHistoryIndex(currentHistoryIndex - 1);\n    }\n  };\n  const handleRedo = async () => {\n    if (currentHistoryIndex < history.length - 1) {\n      const nextCells = history[currentHistoryIndex + 1];\n      setCells(nextCells);\n      setCurrentHistoryIndex(currentHistoryIndex + 1);\n    }\n  };\n  const renderGrid = () => {\n    const grid = [];\n    for (let row = 0; row < gridSize.rows; row++) {\n      for (let col = 0; col < gridSize.cols; col++) {\n        const cell = cells.find(cell => cell.row === row && cell.col === col);\n        grid.push(/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          ref: el => cellRefs.current[`${row}-${col}`] = el,\n          onClick: () => setEditing({\n            row,\n            col,\n            value: cell ? cell.value : ''\n          }),\n          style: {\n            gridRowStart: row + 1,\n            gridColumnStart: col + 1,\n            border: '1px solid #ccc',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: (row + col) % 2 === 0 ? '#f4f4f4' : '#fff',\n            cursor: 'pointer'\n          },\n          children: editing.row === row && editing.col === col ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editing.value,\n            onChange: e => handleCellChange(e, row, col),\n            onBlur: () => handleCellSave(row, col),\n            autoFocus: true,\n            className: \"cell-input\",\n            style: {\n              width: '100%',\n              height: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: cell ? cell.value : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, `${row}-${col}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return grid;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spreadsheet-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Interactive 2D Spreadsheet with GSAP Animations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUndo,\n      disabled: currentHistoryIndex === 0,\n      children: \"Undo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRedo,\n      disabled: currentHistoryIndex === history.length - 1,\n      children: \"Redo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spreadsheet-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentSheet(0),\n        className: currentSheet === 0 ? 'active' : '',\n        children: \"Sheet 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentSheet(1),\n        className: currentSheet === 1 ? 'active' : '',\n        children: \"Sheet 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentSheet(2),\n        className: currentSheet === 2 ? 'active' : '',\n        children: \"Sheet 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spreadsheet\",\n      style: {\n        display: 'grid',\n        gridTemplateColumns: `repeat(${gridSize.cols}, 1fr)`,\n        gridTemplateRows: `repeat(${gridSize.rows}, 1fr)`,\n        gap: '2px',\n        width: '80%',\n        margin: '20px auto'\n      },\n      children: renderGrid()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"2akhFcPjLexY6Qev4uClxTdEzlk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","gsap","jsxDEV","_jsxDEV","App","_s","cells","setCells","editing","setEditing","row","col","value","gridSize","setGridSize","rows","cols","history","setHistory","currentHistoryIndex","setCurrentHistoryIndex","currentSheet","setCurrentSheet","cellRefs","fetchCells","response","fetch","ok","data","json","console","error","handleCellChange","e","target","handleCellSave","method","headers","body","JSON","stringify","sheet","updatedCell","prevCells","updatedCells","map","cell","find","push","addToHistory","newHistory","slice","length","handleUndo","previousCells","handleRedo","nextCells","renderGrid","grid","className","ref","el","current","onClick","style","gridRowStart","gridColumnStart","border","display","alignItems","justifyContent","backgroundColor","cursor","children","type","onChange","onBlur","autoFocus","width","height","fileName","_jsxFileName","lineNumber","columnNumber","disabled","gridTemplateColumns","gridTemplateRows","gap","margin","_c","$RefreshReg$"],"sources":["C:/Users/SUNYLoaner/Desktop/interactive-spreadsheet-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { gsap } from 'gsap';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [cells, setCells] = useState([]);\r\n  const [editing, setEditing] = useState({ row: null, col: null, value: '' });\r\n  const [gridSize, setGridSize] = useState({ rows: 10, cols: 10 });\r\n  const [history, setHistory] = useState([]);\r\n  const [currentHistoryIndex, setCurrentHistoryIndex] = useState(-1);\r\n  const [currentSheet, setCurrentSheet] = useState(0); // Track the current sheet (0, 1, 2)\r\n  const cellRefs = useRef([]);\r\n\r\n  // Fetch cells for the current sheet\r\n  useEffect(() => {\r\n    const fetchCells = async () => {\r\n      const response = await fetch(`http://localhost:5000/cells?sheet=${currentSheet}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setCells(data);\r\n      } else {\r\n        console.error('Failed to fetch cells');\r\n      }\r\n    };\r\n    fetchCells();\r\n  }, [currentSheet]);\r\n\r\n  const handleCellChange = (e, row, col) => {\r\n    setEditing({ row, col, value: e.target.value });\r\n  };\r\n\r\n  const handleCellSave = async (row, col) => {\r\n    const { value } = editing;\r\n    if (!value) return;\r\n\r\n    const response = await fetch('http://localhost:5000/cells', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ row, col, value, sheet: currentSheet }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const updatedCell = await response.json();\r\n      setCells((prevCells) => {\r\n        const updatedCells = prevCells.map((cell) => {\r\n          if (cell.row === updatedCell.row && cell.col === updatedCell.col) {\r\n            return updatedCell;\r\n          }\r\n          return cell;\r\n        });\r\n\r\n        if (!prevCells.find((cell) => cell.row === updatedCell.row && cell.col === updatedCell.col)) {\r\n          updatedCells.push(updatedCell);\r\n        }\r\n\r\n        return updatedCells;\r\n      });\r\n\r\n      addToHistory(updatedCell);\r\n      setEditing({ row: null, col: null, value: '' });\r\n    } else {\r\n      console.error('Failed to save cell');\r\n    }\r\n  };\r\n\r\n  const addToHistory = (updatedCell) => {\r\n    const newHistory = [...history.slice(0, currentHistoryIndex + 1), [...cells]];\r\n    setHistory(newHistory);\r\n    setCurrentHistoryIndex(newHistory.length - 1);\r\n  };\r\n\r\n  const handleUndo = async () => {\r\n    if (currentHistoryIndex > 0) {\r\n      const previousCells = history[currentHistoryIndex - 1];\r\n      setCells(previousCells);\r\n      setCurrentHistoryIndex(currentHistoryIndex - 1);\r\n    }\r\n  };\r\n\r\n  const handleRedo = async () => {\r\n    if (currentHistoryIndex < history.length - 1) {\r\n      const nextCells = history[currentHistoryIndex + 1];\r\n      setCells(nextCells);\r\n      setCurrentHistoryIndex(currentHistoryIndex + 1);\r\n    }\r\n  };\r\n\r\n  const renderGrid = () => {\r\n    const grid = [];\r\n    for (let row = 0; row < gridSize.rows; row++) {\r\n      for (let col = 0; col < gridSize.cols; col++) {\r\n        const cell = cells.find((cell) => cell.row === row && cell.col === col);\r\n        grid.push(\r\n          <div\r\n            key={`${row}-${col}`}\r\n            className=\"cell\"\r\n            ref={(el) => (cellRefs.current[`${row}-${col}`] = el)}\r\n            onClick={() => setEditing({ row, col, value: cell ? cell.value : '' })}\r\n            style={{\r\n              gridRowStart: row + 1,\r\n              gridColumnStart: col + 1,\r\n              border: '1px solid #ccc',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              backgroundColor: (row + col) % 2 === 0 ? '#f4f4f4' : '#fff',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            {editing.row === row && editing.col === col ? (\r\n              <input\r\n                type=\"text\"\r\n                value={editing.value}\r\n                onChange={(e) => handleCellChange(e, row, col)}\r\n                onBlur={() => handleCellSave(row, col)}\r\n                autoFocus\r\n                className=\"cell-input\"\r\n                style={{ width: '100%', height: '100%' }}\r\n              />\r\n            ) : (\r\n              <span>{cell ? cell.value : ''}</span>\r\n            )}\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return grid;\r\n  };\r\n\r\n  return (\r\n    <div className=\"spreadsheet-container\">\r\n      <h1>Interactive 2D Spreadsheet with GSAP Animations</h1>\r\n\r\n      {/* Undo/Redo Buttons */}\r\n      <button onClick={handleUndo} disabled={currentHistoryIndex === 0}>Undo</button>\r\n      <button onClick={handleRedo} disabled={currentHistoryIndex === history.length - 1}>Redo</button>\r\n\r\n      {/* Spreadsheet Tabs */}\r\n      <div className=\"spreadsheet-tabs\">\r\n        <button onClick={() => setCurrentSheet(0)} className={currentSheet === 0 ? 'active' : ''}>Sheet 1</button>\r\n        <button onClick={() => setCurrentSheet(1)} className={currentSheet === 1 ? 'active' : ''}>Sheet 2</button>\r\n        <button onClick={() => setCurrentSheet(2)} className={currentSheet === 2 ? 'active' : ''}>Sheet 3</button>\r\n      </div>\r\n\r\n      {/* Grid */}\r\n      <div\r\n        className=\"spreadsheet\"\r\n        style={{\r\n          display: 'grid',\r\n          gridTemplateColumns: `repeat(${gridSize.cols}, 1fr)`,\r\n          gridTemplateRows: `repeat(${gridSize.rows}, 1fr)`,\r\n          gap: '2px',\r\n          width: '80%',\r\n          margin: '20px auto',\r\n        }}\r\n      >\r\n        {renderGrid()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,IAAI,QAAQ,MAAM;AAC3B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC;IAAEY,GAAG,EAAE,IAAI;IAAEC,GAAG,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EAC3E,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC;IAAEiB,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EAChE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACqB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClE,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACrD,MAAMyB,QAAQ,GAAGvB,MAAM,CAAC,EAAE,CAAC;;EAE3B;EACAD,SAAS,CAAC,MAAM;IACd,MAAMyB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqCL,YAAY,EAAE,CAAC;MACjF,IAAII,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCtB,QAAQ,CAACqB,IAAI,CAAC;MAChB,CAAC,MAAM;QACLE,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAC;MACxC;IACF,CAAC;IACDP,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACH,YAAY,CAAC,CAAC;EAElB,MAAMW,gBAAgB,GAAGA,CAACC,CAAC,EAAEvB,GAAG,EAAEC,GAAG,KAAK;IACxCF,UAAU,CAAC;MAAEC,GAAG;MAAEC,GAAG;MAAEC,KAAK,EAAEqB,CAAC,CAACC,MAAM,CAACtB;IAAM,CAAC,CAAC;EACjD,CAAC;EAED,MAAMuB,cAAc,GAAG,MAAAA,CAAOzB,GAAG,EAAEC,GAAG,KAAK;IACzC,MAAM;MAAEC;IAAM,CAAC,GAAGJ,OAAO;IACzB,IAAI,CAACI,KAAK,EAAE;IAEZ,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MAC1DU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE9B,GAAG;QAAEC,GAAG;QAAEC,KAAK;QAAE6B,KAAK,EAAEpB;MAAa,CAAC;IAC/D,CAAC,CAAC;IAEF,IAAII,QAAQ,CAACE,EAAE,EAAE;MACf,MAAMe,WAAW,GAAG,MAAMjB,QAAQ,CAACI,IAAI,CAAC,CAAC;MACzCtB,QAAQ,CAAEoC,SAAS,IAAK;QACtB,MAAMC,YAAY,GAAGD,SAAS,CAACE,GAAG,CAAEC,IAAI,IAAK;UAC3C,IAAIA,IAAI,CAACpC,GAAG,KAAKgC,WAAW,CAAChC,GAAG,IAAIoC,IAAI,CAACnC,GAAG,KAAK+B,WAAW,CAAC/B,GAAG,EAAE;YAChE,OAAO+B,WAAW;UACpB;UACA,OAAOI,IAAI;QACb,CAAC,CAAC;QAEF,IAAI,CAACH,SAAS,CAACI,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACpC,GAAG,KAAKgC,WAAW,CAAChC,GAAG,IAAIoC,IAAI,CAACnC,GAAG,KAAK+B,WAAW,CAAC/B,GAAG,CAAC,EAAE;UAC3FiC,YAAY,CAACI,IAAI,CAACN,WAAW,CAAC;QAChC;QAEA,OAAOE,YAAY;MACrB,CAAC,CAAC;MAEFK,YAAY,CAACP,WAAW,CAAC;MACzBjC,UAAU,CAAC;QAAEC,GAAG,EAAE,IAAI;QAAEC,GAAG,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAG,CAAC,CAAC;IACjD,CAAC,MAAM;MACLkB,OAAO,CAACC,KAAK,CAAC,qBAAqB,CAAC;IACtC;EACF,CAAC;EAED,MAAMkB,YAAY,GAAIP,WAAW,IAAK;IACpC,MAAMQ,UAAU,GAAG,CAAC,GAAGjC,OAAO,CAACkC,KAAK,CAAC,CAAC,EAAEhC,mBAAmB,GAAG,CAAC,CAAC,EAAE,CAAC,GAAGb,KAAK,CAAC,CAAC;IAC7EY,UAAU,CAACgC,UAAU,CAAC;IACtB9B,sBAAsB,CAAC8B,UAAU,CAACE,MAAM,GAAG,CAAC,CAAC;EAC/C,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAIlC,mBAAmB,GAAG,CAAC,EAAE;MAC3B,MAAMmC,aAAa,GAAGrC,OAAO,CAACE,mBAAmB,GAAG,CAAC,CAAC;MACtDZ,QAAQ,CAAC+C,aAAa,CAAC;MACvBlC,sBAAsB,CAACD,mBAAmB,GAAG,CAAC,CAAC;IACjD;EACF,CAAC;EAED,MAAMoC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAIpC,mBAAmB,GAAGF,OAAO,CAACmC,MAAM,GAAG,CAAC,EAAE;MAC5C,MAAMI,SAAS,GAAGvC,OAAO,CAACE,mBAAmB,GAAG,CAAC,CAAC;MAClDZ,QAAQ,CAACiD,SAAS,CAAC;MACnBpC,sBAAsB,CAACD,mBAAmB,GAAG,CAAC,CAAC;IACjD;EACF,CAAC;EAED,MAAMsC,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMC,IAAI,GAAG,EAAE;IACf,KAAK,IAAIhD,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGG,QAAQ,CAACE,IAAI,EAAEL,GAAG,EAAE,EAAE;MAC5C,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGE,QAAQ,CAACG,IAAI,EAAEL,GAAG,EAAE,EAAE;QAC5C,MAAMmC,IAAI,GAAGxC,KAAK,CAACyC,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACpC,GAAG,KAAKA,GAAG,IAAIoC,IAAI,CAACnC,GAAG,KAAKA,GAAG,CAAC;QACvE+C,IAAI,CAACV,IAAI,cACP7C,OAAA;UAEEwD,SAAS,EAAC,MAAM;UAChBC,GAAG,EAAGC,EAAE,IAAMtC,QAAQ,CAACuC,OAAO,CAAC,GAAGpD,GAAG,IAAIC,GAAG,EAAE,CAAC,GAAGkD,EAAI;UACtDE,OAAO,EAAEA,CAAA,KAAMtD,UAAU,CAAC;YAAEC,GAAG;YAAEC,GAAG;YAAEC,KAAK,EAAEkC,IAAI,GAAGA,IAAI,CAAClC,KAAK,GAAG;UAAG,CAAC,CAAE;UACvEoD,KAAK,EAAE;YACLC,YAAY,EAAEvD,GAAG,GAAG,CAAC;YACrBwD,eAAe,EAAEvD,GAAG,GAAG,CAAC;YACxBwD,MAAM,EAAE,gBAAgB;YACxBC,OAAO,EAAE,MAAM;YACfC,UAAU,EAAE,QAAQ;YACpBC,cAAc,EAAE,QAAQ;YACxBC,eAAe,EAAE,CAAC7D,GAAG,GAAGC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,SAAS,GAAG,MAAM;YAC3D6D,MAAM,EAAE;UACV,CAAE;UAAAC,QAAA,EAEDjE,OAAO,CAACE,GAAG,KAAKA,GAAG,IAAIF,OAAO,CAACG,GAAG,KAAKA,GAAG,gBACzCR,OAAA;YACEuE,IAAI,EAAC,MAAM;YACX9D,KAAK,EAAEJ,OAAO,CAACI,KAAM;YACrB+D,QAAQ,EAAG1C,CAAC,IAAKD,gBAAgB,CAACC,CAAC,EAAEvB,GAAG,EAAEC,GAAG,CAAE;YAC/CiE,MAAM,EAAEA,CAAA,KAAMzC,cAAc,CAACzB,GAAG,EAAEC,GAAG,CAAE;YACvCkE,SAAS;YACTlB,SAAS,EAAC,YAAY;YACtBK,KAAK,EAAE;cAAEc,KAAK,EAAE,MAAM;cAAEC,MAAM,EAAE;YAAO;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC,gBAEFhF,OAAA;YAAAsE,QAAA,EAAO3B,IAAI,GAAGA,IAAI,CAAClC,KAAK,GAAG;UAAE;YAAAoE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QACrC,GA3BI,GAAGzE,GAAG,IAAIC,GAAG,EAAE;UAAAqE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA4BjB,CACP,CAAC;MACH;IACF;IACA,OAAOzB,IAAI;EACb,CAAC;EAED,oBACEvD,OAAA;IAAKwD,SAAS,EAAC,uBAAuB;IAAAc,QAAA,gBACpCtE,OAAA;MAAAsE,QAAA,EAAI;IAA+C;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGxDhF,OAAA;MAAQ4D,OAAO,EAAEV,UAAW;MAAC+B,QAAQ,EAAEjE,mBAAmB,KAAK,CAAE;MAAAsD,QAAA,EAAC;IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/EhF,OAAA;MAAQ4D,OAAO,EAAER,UAAW;MAAC6B,QAAQ,EAAEjE,mBAAmB,KAAKF,OAAO,CAACmC,MAAM,GAAG,CAAE;MAAAqB,QAAA,EAAC;IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAGhGhF,OAAA;MAAKwD,SAAS,EAAC,kBAAkB;MAAAc,QAAA,gBAC/BtE,OAAA;QAAQ4D,OAAO,EAAEA,CAAA,KAAMzC,eAAe,CAAC,CAAC,CAAE;QAACqC,SAAS,EAAEtC,YAAY,KAAK,CAAC,GAAG,QAAQ,GAAG,EAAG;QAAAoD,QAAA,EAAC;MAAO;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1GhF,OAAA;QAAQ4D,OAAO,EAAEA,CAAA,KAAMzC,eAAe,CAAC,CAAC,CAAE;QAACqC,SAAS,EAAEtC,YAAY,KAAK,CAAC,GAAG,QAAQ,GAAG,EAAG;QAAAoD,QAAA,EAAC;MAAO;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1GhF,OAAA;QAAQ4D,OAAO,EAAEA,CAAA,KAAMzC,eAAe,CAAC,CAAC,CAAE;QAACqC,SAAS,EAAEtC,YAAY,KAAK,CAAC,GAAG,QAAQ,GAAG,EAAG;QAAAoD,QAAA,EAAC;MAAO;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvG,CAAC,eAGNhF,OAAA;MACEwD,SAAS,EAAC,aAAa;MACvBK,KAAK,EAAE;QACLI,OAAO,EAAE,MAAM;QACfiB,mBAAmB,EAAE,UAAUxE,QAAQ,CAACG,IAAI,QAAQ;QACpDsE,gBAAgB,EAAE,UAAUzE,QAAQ,CAACE,IAAI,QAAQ;QACjDwE,GAAG,EAAE,KAAK;QACVT,KAAK,EAAE,KAAK;QACZU,MAAM,EAAE;MACV,CAAE;MAAAf,QAAA,EAEDhB,UAAU,CAAC;IAAC;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9E,EAAA,CA9JID,GAAG;AAAAqF,EAAA,GAAHrF,GAAG;AAgKT,eAAeA,GAAG;AAAC,IAAAqF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}